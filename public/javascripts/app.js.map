{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingsvRA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\nvar changeAlbumView = function(album){\n\n     //Update the album title\n     var $albumTitle = $('.album-title');\n     $albumTitle.text(album.name);\n\n     //Update the album artist\n     var $albumArtist = $('.album-artist');\n     $albumArtist.text(album.artist);\n\n     //Update the meta information\n     var $albumMeta = $('.album-meta-info');\n     $albumMeta.text(album.year + \" on \" + album.label);\n\n     //Update the album image\n     var $albumImage = $('.album-image img');\n     $albumImage.attr('src',album.albumArtUrl);\n\n     //Update the Song List\n     var $songList = $(\".album-song-listing\");\n     $songList.empty();\n     var songs = album.songs;\n     for (var i=0; i<songs.length; i++){\n     \tvar songData = songs[i];\n     \tvar $newRow = createSongRow(i+1, songData.name, songData.length);\n     \t$songList.append($newRow);\n     }\n };\n\nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n\tvar template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number= \"'+ songNumber +'\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n\n  var $row = $(template);\n \n  // Change from a song number to play button when the song isn't playing and we hover over the row.\n  var onHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n      var sonNumber =songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n  };\n\n  // Change from a play button to song number when the song isn't playing and we hover off the row.\n  var offHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n  };\n\n  // Toggle the play, pause, and song number based on the button clicked.\n  var clickHandler = function(event) {\n    var songNumber = $(this).data('song-number');\n \n    if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n    }\n \n    if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n    }\n\n    else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n    }\n   };\n\n  \n  $row.find('.song-number').click(clickHandler);\n  $row.hover(onHover, offHover);\n  return $row;\n\n};\n\nif (document.URL.match(/\\/album.html/)) {\n  // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n   \tchangeAlbumView(albumPicasso);\n    setupSeekBars();\n   });\n}\n\nvar updateSeekPercentage = function($seekBar, event){\n  var barWidth = $seekBar.width();\n  var offsetX = event.pageX - $seekBar.offset().left;\n\n  var offsetXPercent = (offsetX / barWidth)*100;\n  offsetXPercent = Math.max(0, offsetXPercent);\n  offsetXPercent = Math.min(100, offsetXPercent);\n\n  var percentageString = offsetXPercent + '%';\n  $seekBar.find('.fill').width(percentageString);\n  $seekBar.find('.thumb').css({left: percentageString})\n}\n\nvar setupSeekBars = function(){\n\n  $seekBars = $('.player-bar .seek-bar');\n  $seekBars.click(function(event){\n    updateSeekPercentage($(this),event);\n  });\n\n  $seekBars.find('.thumb').mousedown(function(event){\n    var $seekBar = $(this).parent();\n\n    $seekBar.addClass('no-animate');\n\n    $(document).bind('mousemove.thumb', function(event){\n      updateSeekPercentage($seekBar, event);\n    });\n\n    //cleanup\n    $(document).bind('mouseup.thumb',function(){\n      $seekBar.removeClass('no-animate');\n      \n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n\n  });\n\n};\n\n\n\n","//require(\"./landing\");\n//require(\"./collection\");\n//require(\"./album\");\n//require(\"./profile\");\n\n// Example album.\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n \n   songs: [\n      { name: 'Blue', length: 163.38, audioUrl: '/music/placeholders/blue' },\n      { name: 'Green', length: 105.66 , audioUrl: '/music/placeholders/green' },\n      { name: 'Red', length: 270.14, audioUrl: '/music/placeholders/red' },\n      { name: 'Pink', length: 154.81, audioUrl: '/music/placeholders/pink' },\n      { name: 'Magenta', length: 375.92, audioUrl: '/music/placeholders/magenta' }\n     ]\n };\n\n\nblocJams = angular.module('BlocJams', ['ui.router']);\n\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n     $locationProvider.html5Mode(true);\n \n     $stateProvider.state('landing', {\n          url: '/',\n          controller: 'Landing.controller',\n          templateUrl: '/templates/landing.html'\n     });\n\n     $stateProvider.state('collection', {\n     url: '/collection',\n     controller: 'Collection.controller',\n     templateUrl: '/templates/collection.html'\n   });\n\n      $stateProvider.state('album', {\n     url: '/album',\n     controller: 'Album.controller',\n     templateUrl: '/templates/album.html'\n   });\n\n\n}]);\n \n// This is a cleaner way to call the controller than crowding it on the module definition.\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\n     $scope.subText = \"Turn the music up!\";\n\n \t\t$scope.subTextClicked = function(){\n \t\t\t$scope.subText += '!';\n \t\t};\n\n \t\t$scope.albumURLs = [\n     '/images/album-placeholders/album-1.jpg',\n     '/images/album-placeholders/album-2.jpg',\n     '/images/album-placeholders/album-3.jpg',\n     '/images/album-placeholders/album-4.jpg',\n     '/images/album-placeholders/album-5.jpg',\n     '/images/album-placeholders/album-6.jpg',\n     '/images/album-placeholders/album-7.jpg',\n     '/images/album-placeholders/album-8.jpg',\n     '/images/album-placeholders/album-9.jpg',\n   ];\n }]);\n\nblocJams.controller('Collection.controller', ['$scope','SongPlayer', function($scope) {\n   $scope.albums = [];\n   for (var i = 0; i < 33; i++) {\n     $scope.albums.push(angular.copy(albumPicasso));\n   }\n   $scope.playAlbum = function(album){\n      SongPlayer.setSong(album, album.songs[0]);//Targets first song in the array.\n   }\n }]);\n\nblocJams.controller('Album.controller', ['$scope','SongPlayer', function($scope, SongPlayer){\n  $scope.album = angular.copy(albumPicasso);\n\n    var hoveredSong = null;\n \n    $scope.onHoverSong = function(song) {\n     hoveredSong = song;\n    };\n \n    $scope.offHoverSong = function(song) {\n     hoveredSong = null;\n    };\n\n    $scope.getSongState = function(song) {\n     if (song === SongPlayer.currentSong && SongPlayer.playing) {\n       return 'playing';\n     }\n     else if (song === hoveredSong) {\n       return 'hovered';\n     }\n     return 'default';\n    };\n\n    $scope.playSong = function(song) {\n      SongPlayer.setSong($scope.album, song);\n    };\n \n    $scope.pauseSong = function(song) {\n      SongPlayer.pause();\n    };\n}]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer){\n  $scope.songPlayer = SongPlayer;\n}]);\n\n  blocJams.service('SongPlayer', function(){\n    var currentSoundFile = null;\n\n    var trackIndex = function(album, song){\n      return album.songs.indexOf(song);\n    };\n\n    return {\n      currentSong: null,\n      currentAlbum: null,\n      playing: false,\n\n      play: function() {\n        this.playing = true;\n        currentSoundFile.play();\n      },\n      pause: function() {\n        this.playing = false;\n        currentSoundFile.pause();\n      },\n      next: function(){\n        var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n        currentTrackIndex++;\n        if(currentTrackIndex >= this.currentAlbum.songs.length){\n          currentTrackIndex = 0;\n        }\n        var song = this.currentAlbum.songs[currentTrackIndex];\n        this.setSong(this.currentAlbum, song);\n\n      },\n      previous: function(){\n        var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n        currentTrackIndex--;\n        if(currentTrackIndex < 0){\n          currentTrackIndex = this.currentAlbum.songs.length - 1;\n        }\n        var song = this.currentAlbum.songs[currentTrackIndex];\n        this\n      },\n      seek: function(time) {\n        // Checks to make sure that a sound file is playing before seeking.\n        if(currentSoundFile) {\n        // Uses a Buzz method to set the time of the song.\n        currentSoundFile.setTime(time);\n        }\n      },\n      setSong: function(album, song){\n        if(currentSoundFile){\n          currentSoundFile.stop();\n        }\n        this.currentAlbum = album;\n        this.currentSong = song;\n        currentSoundFile = new buzz.sound(song.audioUrl, {\n          formats: [\"mp3\"],\n          preload: true\n        });\n\n        this.play();\n      }\n    };\n\n  });\n\nblocJams.directive('slider', ['$document', function($document){\n\n  // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n  var calculateSliderPercentFromMouseEvent = function($slider, event) {\n    var offsetX =  event.pageX - $slider.offset().left; // Distance from left\n    var sliderWidth = $slider.width(); // Width of slider\n    var offsetXPercent = (offsetX  / sliderWidth);\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(1, offsetXPercent);\n    return offsetXPercent;\n   }\n\n  var numberFromValue = function(value, defaultvalue){\n    if (typeof value === 'number'){\n      return value;\n    }\n\n    if (typeof value === 'undefined'){\n      return defaultvalue;\n    }\n\n    if(typeof value === 'string'){\n      return Number(value);\n    }\n  }\n    \n\n  return {\n    templateUrl: '/templates/directives/slider.html',\n    replace: true,\n    restrict: 'E',\n    scope: {\n      onChange: '&'\n    },\n    link: function(scope, element, attributes) {\n        // These values represent the progress into the song/volume bar, and its max value.\n        // For now, we're supplying arbitrary initial and max values.\n        scope.value = 0;\n        scope.max = 100;\n        var $seekBar = $(element);\n\n        attributes.$observe('value', function(newValue){\n          scope.value = numberFromValue(newValue, 0);\n        });\n        attributes.$observe('max', function(newValue){\n          scope.max = numberFromValue(newValue, 100) || 100;\n        })\n\n        var percentString = function(){\n            var value = scope.value || 0;\n            var max = scope.max || 100;\n            percent = value / max * 100;\n          return percent + \"%\";\n        }\n\n        scope.fillStyle = function(){\n          return {width: percentString()};\n        }\n\n        scope.thumbStyle = function(){\n          return {left: percentString()};\n        }\n\n        scope.onClickSlider = function(event){\n          var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n          scope.value = percent * scope.max;\n          notifyCallback(scope.value);\n        }\n\n        scope.trackThumb = function() {\n\n          $document.bind('mousemove.thumb', function(event){\n            var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n              scope.$apply(function(){\n              scope.value = percent * scope.max;\n              notifyCallback(scope.value);\n              });\n          });\n \n          //cleanup\n          $document.bind('mouseup.thumb', function(){\n            $document.unbind('mousemove.thumb');\n            $document.unbind('mouseup.thumb');\n          });\n        };\n\n        var notifyCallback = function(newValue) {\n         if(typeof scope.onChange === 'function') {\n           scope.onChange({value: newValue});\n         }\n       };\n\n    }\n  };\n}]);\n\n\n\n\n\n"," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '     <img src=\"/images/album-placeholder.png\"/>'\n      + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '\t\tX:XX Total Length'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  }; \n\n var updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n \n   for (var i = 0; i < ((Math.random()*100)+25); i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n     $collection.append($newThumbnail);\n   }\n\n   var onHover = function(event){\n      $(this).append(buildAlbumOverlay(\"/album.html\"));\n   };\n\n   var offHover = function(event){\n      $(this).find('.collection-album-image-overlay').remove();\n   };\n\n   $collection.find('.collection-album-image-container').hover(onHover,offHover);\n\n };\n \nif (document.URL.match(/\\/collection.html/)) {\n  $(document).ready(function() {\n     updateCollectionView();\n  });\n}\n\n\n","$(document).ready(function(){\n\t\n\t$('.hero-content h3').click(function(){\t\n\tvar subText = $(this).text();\n\t$(this).text(subText + \"! \");\n\t});\n\n\t$('.hero-content h3').hover(function(){\n\t$(this).css('color','pink');\n\t});\n\n\t$('.hero-content h1').click(function(){\t\n\t$(this).fadeOut();\n\t});\n\n\tvar onHoverAction = function(event){\n\t\tconsole.log('Hover action triggered.');\n\t\t$(this).animate({'margin-top': '10px'});\n\t};\n\n\tvar offHoverAction = function(event){\n\t\tconsole.log('Off-Hover action triggered.');\n\t\t$(this).animate({'margin-top': '0px'});\n\t};\n\n\t$('.selling-points .point').hover(onHoverAction, offHoverAction);\n\n\t$('.selling-points .point h5').click(function(){\n\t\t$(this).css('font-size', '30px');\n\t});\n\t\n\n\n});"," // holds the name of our tab button container for selection later in the function\n var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n \t$tab = $(this);\n \t$(tabsContainer + \" li\").removeClass('active');\n \t$tab.parent().addClass('active');\n \tselectedTabName = $tab.attr('href');\n \tconsole.log(selectedTabName);\n \t$(\".tab-pane\").addClass('hidden');\n \t$(selectedTabName).removeClass('hidden');\n \tevent.preventDefault();\n };\n\n if (document.URL.match(/\\/profile.html/)){\n \t$(document).ready(function(){\n \t\tvar $tabs = $(tabsContainer + \" a\");\n \t\t$tabs.click(selectTabHandler);\n \t\t$tabs[0].click();\n \t});\n }"]}